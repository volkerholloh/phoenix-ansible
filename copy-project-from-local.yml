- name: Zip, transfer, and unzip a folder
  hosts: production
  remote_user: "{{ user }}"
  become: true
  vars:
    archive_name: "my_app.zip"
    remote_path: "{{ repo_dir }}"

  tasks:
    - name: Check if _build/prod exists
      stat:
        path: "{{ local_dir }}/_build/prod"
      delegate_to: localhost
      register: prod_dir_exists
      run_once: true
      become: false

    # rename _build/prod to _build/prod_local
    - name: Rename _build/prod to _build/prod_local (if exists)
      command: mv {{ local_dir }}/_build/prod {{ local_dir }}/_build/prod_local
      args:
        removes: "{{ local_dir }}/_build/prod"
      when: prod_dir_exists.stat.exists
      delegate_to: localhost
      become: false
      run_once: true

    # 1) Zip locally
    - name: Create zip archive locally
      archive:
        path: "{{ local_dir }}"
        dest: "/tmp/{{ archive_name }}"
        format: zip
      delegate_to: localhost
      become: false
      run_once: true

    # change it back _build/prod_local to _build/prod
    - name: Rename _build/prod_local to _build/prod
      command: mv {{ local_dir }}/_build/prod_local {{ local_dir }}/_build/prod
      delegate_to: localhost
      become: false
      run_once: true
      when: prod_dir_exists.stat.exists

    # 2) Transfer to remote
    - name: Copy zip to remote
      copy:
        src: "/tmp/{{ archive_name }}"
        dest: "/tmp/{{ archive_name }}"

    # 3) Ensure target directory exists
    - name: Ensure target directory exists
      file:
        path: "{{ code_dir }}"
        state: directory
        mode: "0755"

    # 4) Unzip on remote
    - name: Unzip archive on remote
      unarchive:
        src: "/tmp/{{ archive_name }}"
        dest: "{{ code_dir }}"
        remote_src: yes

    # # delete _build directory
    # - name: Remove _build directory
    #   file:
    #     path: "{{ code_dir }}/_build"
    #     state: absent
